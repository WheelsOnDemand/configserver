eureka:
  client: 
    fetchRegistry: true
    registerWithEureka: true
    serviceUrl:
      defaultZone: http://localhost:9001/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    prefer-ip-address: true
spring:
 application:
  name: inventory-service
 zipkin:
  baseUrl: http://localhost:9411
 cloud:
  config:
   profile: dev
 datasource:
  password: aai@123
  url: jdbc:postgresql://localhost:5432/invnetorydb
  username: postgres
 jpa:
   hibernate:
     ddl-auto: update
   properties:
    hibernate:
     dialect: org.hibernate.dialect.PostgreSQLDialect
   show-sql: true 
 kafka:
     consumer:
       auto-offset-reset: earliest
       bootstrap-servers: localhost:9092
       group-id: inventory2
       key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
       properties:
         spring:
           json:
             trusted:
               packages: '*'
       value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
microservice:
  payment: http://localhost:8081
  inventory: http://localhost:8080
  filter: http://localhost:8083
  invoice: http://localhost:8082
  rental: http://localhost:8084
