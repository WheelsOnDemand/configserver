server:
    port: 8083
spring:
    application:
        name: filter-service 
    zipkin:
        baseUrl: http://zipkin-svc:9411
    datasource:
        password: root
        url: jdbc:postgresql://${DB_HOST:localhost}:5432/filterdb
        username: admin
    jpa:
       hibernate:
         ddl-auto: update
       properties:
        hibernate:
          dialect: org.hibernate.dialect.PostgreSQLDialect
        show-sql: true
    kafka:
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: kafka:9092
            group-id: filter
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: '*'
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
microservice:
  payment: http://payment-service-svc
  inventory: http://inventory-service-svc
  filter: http://filter-service-svc
  invoice: http://invoice-service-svc
  rental: http://rental-service-svc
