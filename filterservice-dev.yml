eureka:
  client:
    fetchRegistry: true
    registerWithEureka: true 
    serviceUrl:
      defaultZone: http://localhost:9001/eureka
  instance:
    instance-id: ${spring.application.name}:${instanceId:${random.value}}
    prefer-ip-address: true
server:
    port: 8083
spring:
    application:
        name: filter-service 
    zipkin:
        baseUrl: http://localhost:9411
    datasource:
        password: root
        url: jdbc:mysql://localhost:3306/filterdb
        username: root
    jpa:
       hibernate:
         ddl-auto: update
       properties:
        hibernate:
          dialect: org.hibernate.dialect.MySQLDialect
        show-sql: true
    kafka:
        consumer:
            auto-offset-reset: earliest
            bootstrap-servers: localhost:9092
            group-id: filter
            key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
            properties:
                spring:
                    json:
                        trusted:
                            packages: '*'
            value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
        topic:
            name: rental_topics3
management:
  endpoint:
    metrics:
      enabled: true
    prometheus:
      enabled: true
  endpoints:
    web:
      exposure:
        include: '*'
  metrics:
    export:
      prometheus:
        enabled: true
microservice:
  payment: http://localhost:8081
  inventory: http://localhost:8080
  filter: http://localhost:8083
  invoice: http://localhost:8082
  rental: http://localhost:8084
